{"version":3,"file":"static/js/728.889a1dd6.chunk.js","mappings":"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","sources":["ui-component/cards/Skeleton/EarningCard.js","assets/images/icons/earning.svg","views/dashboard/Default/EarningCard.js","views/dashboard/Default/chart-data/bajaj-area-chart.js","views/dashboard/Default/BajajAreaChartCard.js","ui-component/cards/Skeleton/PopularCard.js","views/dashboard/Default/PopularCard.js","views/dashboard/Default/TotalOrderLineChartCard.js","ui-component/cards/Skeleton/TotalIncomeCard.js","views/dashboard/Default/TotalIncomeDarkCard.js","views/dashboard/Default/TotalIncomeLightCard.js","ui-component/cards/Skeleton/TotalGrowthBarChart.js","views/dashboard/Default/chart-data/total-growth-bar-chart.js","views/dashboard/Default/TotalGrowthBarChart.js","views/dashboard/Default/index.js"],"sourcesContent":["// material-ui\r\nimport { Card, CardContent, Grid } from '@mui/material';\r\nimport Skeleton from '@mui/material/Skeleton';\r\n\r\n// ==============================|| SKELETON - EARNING CARD ||============================== //\r\n\r\nconst EarningCard = () => (\r\n    <Card>\r\n        <CardContent>\r\n            <Grid container direction=\"column\">\r\n                <Grid item>\r\n                    <Grid container justifyContent=\"space-between\">\r\n                        <Grid item>\r\n                            <Skeleton variant=\"rectangular\" width={44} height={44} />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Skeleton variant=\"rectangular\" width={34} height={34} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Skeleton variant=\"rectangular\" sx={{ my: 2 }} height={40} />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Skeleton variant=\"rectangular\" height={30} />\r\n                </Grid>\r\n            </Grid>\r\n        </CardContent>\r\n    </Card>\r\n);\r\n\r\nexport default EarningCard;\r\n","var _path, _path2, _path3;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgEarning(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19 9H9C7.89543 9 7 9.89543 7 11V17C7 18.1046 7.89543 19 9 19H19C20.1046 19 21 18.1046 21 17V11C21 9.89543 20.1046 9 19 9Z\",\n    stroke: \"white\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14 16C15.1046 16 16 15.1046 16 14C16 12.8954 15.1046 12 14 12C12.8954 12 12 12.8954 12 14C12 15.1046 12.8954 16 14 16Z\",\n    fill: \"#90CAF9\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17 9V7C17 6.46957 16.7893 5.96086 16.4142 5.58579C16.0391 5.21071 15.5304 5 15 5H5C4.46957 5 3.96086 5.21071 3.58579 5.58579C3.21071 5.96086 3 6.46957 3 7V13C3 13.5304 3.21071 14.0391 3.58579 14.4142C3.96086 14.7893 4.46957 15 5 15H7\",\n    stroke: \"white\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgEarning);\nexport default __webpack_public_path__ + \"static/media/earning.00f461a5c235604f1375d5e59ee3e093.svg\";\nexport { ForwardRef as ReactComponent };","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\n// material-ui\r\nimport { styled, useTheme } from '@mui/material/styles';\r\nimport { Avatar, Box, Grid, Menu, MenuItem, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SkeletonEarningCard from 'ui-component/cards/Skeleton/EarningCard';\r\n\r\n// assets\r\nimport EarningIcon from 'assets/images/icons/earning.svg';\r\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\r\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\r\nimport GetAppTwoToneIcon from '@mui/icons-material/GetAppOutlined';\r\nimport FileCopyTwoToneIcon from '@mui/icons-material/FileCopyOutlined';\r\nimport PictureAsPdfTwoToneIcon from '@mui/icons-material/PictureAsPdfOutlined';\r\nimport ArchiveTwoToneIcon from '@mui/icons-material/ArchiveOutlined';\r\n\r\nimport { IconFileAnalytics } from '@tabler/icons';\r\n\r\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\r\n    backgroundColor: theme.palette.secondary.dark,\r\n    color: '#fff',\r\n    overflow: 'hidden',\r\n    position: 'relative',\r\n    '&:after': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        width: 210,\r\n        height: 210,\r\n        background: theme.palette.secondary[800],\r\n        borderRadius: '50%',\r\n        top: -85,\r\n        right: -95,\r\n        [theme.breakpoints.down('sm')]: {\r\n            top: -105,\r\n            right: -140\r\n        }\r\n    },\r\n    '&:before': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        width: 210,\r\n        height: 210,\r\n        background: theme.palette.secondary[800],\r\n        borderRadius: '50%',\r\n        top: -125,\r\n        right: -15,\r\n        opacity: 0.5,\r\n        [theme.breakpoints.down('sm')]: {\r\n            top: -155,\r\n            right: -70\r\n        }\r\n    }\r\n}));\r\n\r\n// ===========================|| DASHBOARD DEFAULT - EARNING CARD ||=========================== //\r\n\r\nconst EarningCard = ({ isLoading, dashboardData }) => {\r\n    const theme = useTheme();\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <SkeletonEarningCard />\r\n            ) : (\r\n                <CardWrapper border={false} content={false}>\r\n                    <Box sx={{ p: 2.25 }}>\r\n                        <Grid container direction=\"column\">\r\n                            <Grid item>\r\n                                <Grid container justifyContent=\"space-between\">\r\n                                    <Grid item>\r\n                                        <Avatar\r\n                                            variant=\"rounded\"\r\n                                            sx={{\r\n                                                ...theme.typography.commonAvatar,\r\n                                                ...theme.typography.largeAvatar,\r\n                                                backgroundColor: theme.palette.secondary[800],\r\n                                                mt: 1\r\n                                            }}\r\n                                        >\r\n                                            {/* <img src={icons.IconFileAnalytics} alt=\"Notification\" /> */}\r\n                                            <IconFileAnalytics color=\"white\" />\r\n                                        </Avatar>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Grid container alignItems=\"center\">\r\n                                    <Grid item>\r\n                                        <Typography sx={{ fontSize: '2.125rem', fontWeight: 500, mr: 1, mt: 1.75, mb: 0.75 }}>\r\n                                            {dashboardData.total_records}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    {/* <Grid item>\r\n                                        <Avatar\r\n                                            sx={{\r\n                                                cursor: 'pointer',\r\n                                                ...theme.typography.smallAvatar,\r\n                                                backgroundColor: theme.palette.secondary[200],\r\n                                                color: theme.palette.secondary.dark\r\n                                            }}\r\n                                        >\r\n                                            <ArrowUpwardIcon fontSize=\"inherit\" sx={{ transform: 'rotate3d(1, 1, 1, 45deg)' }} />\r\n                                        </Avatar>\r\n                                    </Grid> */}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item sx={{ mb: 1.25 }}>\r\n                                <Typography\r\n                                    sx={{\r\n                                        fontSize: '1rem',\r\n                                        fontWeight: 500,\r\n                                        color: theme.palette.secondary[200]\r\n                                    }}\r\n                                >\r\n                                    Total Qualified Files Uploaded\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </CardWrapper>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nEarningCard.propTypes = {\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default EarningCard;\r\n","// ===========================|| DASHBOARD - BAJAJ AREA CHART ||=========================== //\r\n\r\nconst chartData = {\r\n    type: 'area',\r\n    height: 95,\r\n    options: {\r\n        chart: {\r\n            id: 'support-chart',\r\n            sparkline: {\r\n                enabled: true\r\n            }\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        stroke: {\r\n            curve: 'smooth',\r\n            width: 1\r\n        },\r\n        tooltip: {\r\n            fixed: {\r\n                enabled: false\r\n            },\r\n            x: {\r\n                show: false\r\n            },\r\n            y: {\r\n                title: 'Ticket '\r\n            },\r\n            marker: {\r\n                show: false\r\n            }\r\n        }\r\n    },\r\n    series: [\r\n        {\r\n            data: [0, 15, 10, 50, 30, 40, 25]\r\n        }\r\n    ]\r\n};\r\n\r\nexport default chartData;\r\n","import { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Card, Grid, Typography } from '@mui/material';\r\n\r\n// third-party\r\nimport ApexCharts from 'apexcharts';\r\nimport Chart from 'react-apexcharts';\r\n\r\n// project imports\r\nimport chartData from './chart-data/bajaj-area-chart';\r\n\r\n// ===========================|| DASHBOARD DEFAULT - BAJAJ AREA CHART CARD ||=========================== //\r\n\r\nconst BajajAreaChartCard = () => {\r\n    const theme = useTheme();\r\n    const customization = useSelector((state) => state.customization);\r\n    const { navType } = customization;\r\n\r\n    const orangeDark = theme.palette.secondary[800];\r\n\r\n    useEffect(() => {\r\n        const newSupportChart = {\r\n            ...chartData.options,\r\n            colors: [orangeDark],\r\n            tooltip: {\r\n                theme: 'light'\r\n            }\r\n        };\r\n        ApexCharts.exec(`support-chart`, 'updateOptions', newSupportChart);\r\n    }, [navType, orangeDark]);\r\n\r\n    return (\r\n        <Card sx={{ bgcolor: 'secondary.light' }}>\r\n            <Grid container sx={{ p: 2, pb: 0, color: '#fff' }}>\r\n                <Grid item xs={12}>\r\n                    <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                        <Grid item>\r\n                            <Typography variant=\"subtitle1\" sx={{ color: theme.palette.secondary.dark }}>\r\n                                Daily Avery for current Month\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant=\"h4\" sx={{ color: theme.palette.grey[800] }}>\r\n                                205\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"subtitle2\" sx={{ color: theme.palette.grey[800] }}>\r\n                        10% increase from previous month\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <Chart {...chartData} />\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default BajajAreaChartCard;\r\n","// material-ui\r\nimport { Card, CardContent, Grid } from '@mui/material';\r\nimport Skeleton from '@mui/material/Skeleton';\r\n\r\n// project imports\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// ==============================|| SKELETON - POPULAR CARD ||============================== //\r\n\r\nconst PopularCard = () => (\r\n    <Card>\r\n        <CardContent>\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12}>\r\n                    <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={gridSpacing}>\r\n                        <Grid item xs zeroMinWidth>\r\n                            <Skeleton variant=\"rectangular\" height={20} />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Skeleton variant=\"rectangular\" height={20} width={20} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Skeleton variant=\"rectangular\" height={150} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                <Grid item xs={6}>\r\n                                    <Skeleton variant=\"rectangular\" height={20} />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                        <Grid item xs zeroMinWidth>\r\n                                            <Skeleton variant=\"rectangular\" height={20} />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Skeleton variant=\"rectangular\" height={20} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                <Grid item xs={6}>\r\n                                    <Skeleton variant=\"rectangular\" height={20} />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                        <Grid item xs zeroMinWidth>\r\n                                            <Skeleton variant=\"rectangular\" height={20} />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Skeleton variant=\"rectangular\" height={20} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                <Grid item xs={6}>\r\n                                    <Skeleton variant=\"rectangular\" height={20} />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                        <Grid item xs zeroMinWidth>\r\n                                            <Skeleton variant=\"rectangular\" height={20} />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Skeleton variant=\"rectangular\" height={20} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                <Grid item xs={6}>\r\n                                    <Skeleton variant=\"rectangular\" height={20} />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                        <Grid item xs zeroMinWidth>\r\n                                            <Skeleton variant=\"rectangular\" height={20} />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Skeleton variant=\"rectangular\" height={20} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                <Grid item xs={6}>\r\n                                    <Skeleton variant=\"rectangular\" height={20} />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\r\n                                        <Grid item xs zeroMinWidth>\r\n                                            <Skeleton variant=\"rectangular\" height={20} />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Skeleton variant=\"rectangular\" height={16} width={16} />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Skeleton variant=\"rectangular\" height={20} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </CardContent>\r\n        <CardContent sx={{ p: 1.25, display: 'flex', pt: 0, justifyContent: 'center' }}>\r\n            <Skeleton variant=\"rectangular\" height={25} width={75} />\r\n        </CardContent>\r\n    </Card>\r\n);\r\n\r\nexport default PopularCard;\r\n","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Avatar, Button, CardActions, CardContent, Divider, Grid, Menu, MenuItem, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport BajajAreaChartCard from './BajajAreaChartCard';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SkeletonPopularCard from 'ui-component/cards/Skeleton/PopularCard';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// assets\r\nimport ChevronRightOutlinedIcon from '@mui/icons-material/ChevronRightOutlined';\r\nimport MoreHorizOutlinedIcon from '@mui/icons-material/MoreHorizOutlined';\r\nimport KeyboardArrowUpOutlinedIcon from '@mui/icons-material/KeyboardArrowUpOutlined';\r\nimport KeyboardArrowDownOutlinedIcon from '@mui/icons-material/KeyboardArrowDownOutlined';\r\n\r\n// ==============================|| DASHBOARD DEFAULT - POPULAR CARD ||============================== //\r\n\r\nconst PopularCard = ({ isLoading }) => {\r\n    const theme = useTheme();\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <SkeletonPopularCard />\r\n            ) : (\r\n                <MainCard content={false}>\r\n                    <CardContent>\r\n                        <Grid container spacing={gridSpacing}>\r\n                            <Grid item xs={12}>\r\n                                <Grid container alignContent=\"center\" justifyContent=\"space-between\">\r\n                                    <Grid item>\r\n                                        <Typography variant=\"h4\">Popular Stats</Typography>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <MoreHorizOutlinedIcon\r\n                                            fontSize=\"small\"\r\n                                            sx={{\r\n                                                color: theme.palette.primary[200],\r\n                                                cursor: 'pointer'\r\n                                            }}\r\n                                            aria-controls=\"menu-popular-card\"\r\n                                            aria-haspopup=\"true\"\r\n                                            onClick={handleClick}\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12} sx={{ pt: '16px !important' }}>\r\n                                <BajajAreaChartCard />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Grid container direction=\"column\">\r\n                                    <Grid item>\r\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                            <Grid item>\r\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                    Daily Average for current month\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                                    <Grid item>\r\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                            201\r\n                                                        </Typography>\r\n                                                    </Grid>\r\n                                                    <Grid item>\r\n                                                        <Avatar\r\n                                                            variant=\"rounded\"\r\n                                                            sx={{\r\n                                                                width: 16,\r\n                                                                height: 16,\r\n                                                                borderRadius: '5px',\r\n                                                                backgroundColor: theme.palette.success.light,\r\n                                                                color: theme.palette.success.dark,\r\n                                                                ml: 2\r\n                                                            }}\r\n                                                        >\r\n                                                            <KeyboardArrowUpOutlinedIcon fontSize=\"small\" color=\"inherit\" />\r\n                                                        </Avatar>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Typography variant=\"subtitle2\" sx={{ color: 'success.dark' }}>\r\n                                            10% Increase\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Divider sx={{ my: 1.5 }} />\r\n                                <Grid container direction=\"column\">\r\n                                    <Grid item>\r\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                            <Grid item>\r\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                    Daily Average for last month\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                                    <Grid item>\r\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                                                            195\r\n                                                        </Typography>\r\n                                                    </Grid>\r\n                                                    <Grid item>\r\n                                                        <Avatar\r\n                                                            variant=\"rounded\"\r\n                                                            sx={{\r\n                                                                width: 16,\r\n                                                                height: 16,\r\n                                                                borderRadius: '5px',\r\n                                                                backgroundColor: theme.palette.orange.light,\r\n                                                                color: theme.palette.orange.dark,\r\n                                                                marginLeft: 1.875\r\n                                                            }}\r\n                                                        >\r\n                                                            <KeyboardArrowDownOutlinedIcon fontSize=\"small\" color=\"inherit\" />\r\n                                                        </Avatar>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Typography variant=\"subtitle2\" sx={{ color: theme.palette.orange.dark }}>\r\n                                            10% Drop\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </CardContent>\r\n                </MainCard>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nPopularCard.propTypes = {\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default PopularCard;\r\n","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme, styled } from '@mui/material/styles';\r\nimport { Avatar, Box, Button, Grid, Typography } from '@mui/material';\r\n\r\n// third-party\r\nimport Chart from 'react-apexcharts';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SkeletonTotalOrderCard from 'ui-component/cards/Skeleton/EarningCard';\r\n\r\nimport ChartDataMonth from './chart-data/total-order-month-line-chart';\r\nimport ChartDataYear from './chart-data/total-order-year-line-chart';\r\n\r\n// assets\r\nimport LocalMallOutlinedIcon from '@mui/icons-material/LocalMallOutlined';\r\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\r\nimport { IconKeyboard } from '@tabler/icons';\r\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\r\n    backgroundColor: theme.palette.primary.dark,\r\n    color: '#fff',\r\n    overflow: 'hidden',\r\n    position: 'relative',\r\n    '&>div': {\r\n        position: 'relative',\r\n        zIndex: 5\r\n    },\r\n    '&:after': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        width: 210,\r\n        height: 210,\r\n        background: theme.palette.primary[800],\r\n        borderRadius: '50%',\r\n        zIndex: 1,\r\n        top: -85,\r\n        right: -95,\r\n        [theme.breakpoints.down('sm')]: {\r\n            top: -105,\r\n            right: -140\r\n        }\r\n    },\r\n    '&:before': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        zIndex: 1,\r\n        width: 210,\r\n        height: 210,\r\n        background: theme.palette.primary[800],\r\n        borderRadius: '50%',\r\n        top: -125,\r\n        right: -15,\r\n        opacity: 0.5,\r\n        [theme.breakpoints.down('sm')]: {\r\n            top: -155,\r\n            right: -70\r\n        }\r\n    }\r\n}));\r\n\r\n// ==============================|| DASHBOARD - TOTAL ORDER LINE CHART CARD ||============================== //\r\n\r\nconst TotalOrderLineChartCard = ({ isLoading, dashboardData }) => {\r\n    const theme = useTheme();\r\n\r\n    const [timeValue, setTimeValue] = useState(false);\r\n    const handleChangeTime = (event, newValue) => {\r\n        setTimeValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <SkeletonTotalOrderCard />\r\n            ) : (\r\n                <CardWrapper border={false} content={false}>\r\n                    <Box sx={{ p: 2.25 }}>\r\n                        <Grid container direction=\"column\">\r\n                            <Grid item>\r\n                                <Grid container justifyContent=\"space-between\">\r\n                                    <Grid item>\r\n                                        <Avatar\r\n                                            variant=\"rounded\"\r\n                                            sx={{\r\n                                                ...theme.typography.commonAvatar,\r\n                                                ...theme.typography.largeAvatar,\r\n                                                backgroundColor: theme.palette.primary[800],\r\n                                                color: '#fff',\r\n                                                mt: 1\r\n                                            }}\r\n                                        >\r\n                                            {/* <LocalMallOutlinedIcon fontSize=\"inherit\" /> */}\r\n                                            <IconKeyboard color=\"white\" />\r\n                                        </Avatar>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item sx={{ mb: 0.75 }}>\r\n                                <Grid container alignItems=\"center\">\r\n                                    <Grid item xs={12}>\r\n                                        <Grid container alignItems=\"center\">\r\n                                            <Grid item>\r\n                                                <Typography sx={{ fontSize: '2.125rem', fontWeight: 500, mr: 1, mt: 1.75, mb: 0.75 }}>\r\n                                                    {dashboardData.total_search_keyword_records}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            {/* <Grid item>\r\n                                                <Avatar\r\n                                                    sx={{\r\n                                                        ...theme.typography.smallAvatar,\r\n                                                        cursor: 'pointer',\r\n                                                        backgroundColor: theme.palette.primary[200],\r\n                                                        color: theme.palette.primary.dark\r\n                                                    }}\r\n                                                >\r\n                                                    <ArrowDownwardIcon fontSize=\"inherit\" sx={{ transform: 'rotate3d(1, 1, 1, 45deg)' }} />\r\n                                                </Avatar>\r\n                                            </Grid> */}\r\n                                            <Grid item xs={12}>\r\n                                                <Typography\r\n                                                    sx={{\r\n                                                        fontSize: '1rem',\r\n                                                        fontWeight: 500,\r\n                                                        color: theme.palette.primary[200]\r\n                                                    }}\r\n                                                >\r\n                                                    Total Keywords Data Entry\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </CardWrapper>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nTotalOrderLineChartCard.propTypes = {\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default TotalOrderLineChartCard;\r\n","// material-ui\r\nimport { Card, List, ListItem, ListItemAvatar, ListItemText, Skeleton } from '@mui/material';\r\n\r\n// ==============================|| SKELETON - TOTAL INCOME DARK/LIGHT CARD ||============================== //\r\n\r\nconst TotalIncomeCard = () => (\r\n    <Card sx={{ p: 2 }}>\r\n        <List sx={{ py: 0 }}>\r\n            <ListItem alignItems=\"center\" disableGutters sx={{ py: 0 }}>\r\n                <ListItemAvatar>\r\n                    <Skeleton variant=\"rectangular\" width={44} height={44} />\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                    sx={{ py: 0 }}\r\n                    primary={<Skeleton variant=\"rectangular\" height={20} />}\r\n                    secondary={<Skeleton variant=\"text\" />}\r\n                />\r\n            </ListItem>\r\n        </List>\r\n    </Card>\r\n);\r\n\r\nexport default TotalIncomeCard;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { styled, useTheme } from '@mui/material/styles';\r\nimport { Avatar, Box, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport TotalIncomeCard from 'ui-component/cards/Skeleton/TotalIncomeCard';\r\n\r\n// assets\r\nimport TableChartOutlinedIcon from '@mui/icons-material/TableChartOutlined';\r\nimport { IconTableOptions } from '@tabler/icons';\r\n// styles\r\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\r\n    backgroundColor: theme.palette.primary.dark,\r\n    color: theme.palette.primary.light,\r\n    overflow: 'hidden',\r\n    position: 'relative',\r\n    '&:after': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        width: 210,\r\n        height: 210,\r\n        background: `linear-gradient(210.04deg, ${theme.palette.primary[200]} -50.94%, rgba(144, 202, 249, 0) 83.49%)`,\r\n        borderRadius: '50%',\r\n        top: -30,\r\n        right: -180\r\n    },\r\n    '&:before': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        width: 210,\r\n        height: 210,\r\n        background: `linear-gradient(140.9deg, ${theme.palette.primary[200]} -14.02%, rgba(144, 202, 249, 0) 77.58%)`,\r\n        borderRadius: '50%',\r\n        top: -160,\r\n        right: -130\r\n    }\r\n}));\r\n\r\n// ==============================|| DASHBOARD - TOTAL INCOME DARK CARD ||============================== //\r\n\r\nconst TotalIncomeDarkCard = ({ isLoading, dashboardData }) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <TotalIncomeCard />\r\n            ) : (\r\n                <CardWrapper border={false} content={false}>\r\n                    <Box sx={{ p: 2 }}>\r\n                        <List sx={{ py: 0 }}>\r\n                            <ListItem alignItems=\"center\" disableGutters sx={{ py: 0 }}>\r\n                                <ListItemAvatar>\r\n                                    <Avatar\r\n                                        variant=\"rounded\"\r\n                                        sx={{\r\n                                            ...theme.typography.commonAvatar,\r\n                                            ...theme.typography.largeAvatar,\r\n                                            backgroundColor: theme.palette.primary[800],\r\n                                            color: '#fff'\r\n                                        }}\r\n                                    >\r\n                                        <IconTableOptions color=\"white\" />\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                                <ListItemText\r\n                                    sx={{\r\n                                        py: 0,\r\n                                        mt: 0.45,\r\n                                        mb: 0.45\r\n                                    }}\r\n                                    primary={\r\n                                        <Typography variant=\"h4\" sx={{ color: '#fff' }}>\r\n                                            {dashboardData.total_daily_summary_records}\r\n                                        </Typography>\r\n                                    }\r\n                                    secondary={\r\n                                        <Typography variant=\"subtitle2\" sx={{ color: 'primary.light', mt: 0.25 }}>\r\n                                            Total Summary Records\r\n                                        </Typography>\r\n                                    }\r\n                                />\r\n                            </ListItem>\r\n                        </List>\r\n                    </Box>\r\n                </CardWrapper>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nTotalIncomeDarkCard.propTypes = {\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default TotalIncomeDarkCard;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme, styled } from '@mui/material/styles';\r\nimport { Avatar, Box, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport TotalIncomeCard from 'ui-component/cards/Skeleton/TotalIncomeCard';\r\n\r\n// assets\r\nimport StorefrontTwoToneIcon from '@mui/icons-material/StorefrontTwoTone';\r\nimport { IconCalendar } from '@tabler/icons';\r\n// styles\r\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\r\n    overflow: 'hidden',\r\n    position: 'relative',\r\n    '&:after': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        width: 210,\r\n        height: 210,\r\n        background: `linear-gradient(210.04deg, ${theme.palette.warning.dark} -50.94%, rgba(144, 202, 249, 0) 83.49%)`,\r\n        borderRadius: '50%',\r\n        top: -30,\r\n        right: -180\r\n    },\r\n    '&:before': {\r\n        content: '\"\"',\r\n        position: 'absolute',\r\n        width: 210,\r\n        height: 210,\r\n        background: `linear-gradient(140.9deg, ${theme.palette.warning.dark} -14.02%, rgba(144, 202, 249, 0) 70.50%)`,\r\n        borderRadius: '50%',\r\n        top: -160,\r\n        right: -130\r\n    }\r\n}));\r\n\r\n// ==============================|| DASHBOARD - TOTAL INCOME LIGHT CARD ||============================== //\r\n\r\nconst TotalIncomeLightCard = ({ isLoading, dashboardData }) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <TotalIncomeCard />\r\n            ) : (\r\n                <CardWrapper border={false} content={false}>\r\n                    <Box sx={{ p: 2 }}>\r\n                        <List sx={{ py: 0 }}>\r\n                            <ListItem alignItems=\"center\" disableGutters sx={{ py: 0 }}>\r\n                                <ListItemAvatar>\r\n                                    <Avatar\r\n                                        variant=\"rounded\"\r\n                                        sx={{\r\n                                            ...theme.typography.commonAvatar,\r\n                                            ...theme.typography.largeAvatar,\r\n                                            backgroundColor: theme.palette.warning.light,\r\n                                            color: theme.palette.warning.dark\r\n                                        }}\r\n                                    >\r\n                                        {/* <StorefrontTwoToneIcon fontSize=\"inherit\" /> */}\r\n                                        <IconCalendar color=\"#ffc107\" />\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                                <ListItemText\r\n                                    sx={{\r\n                                        py: 0,\r\n                                        mt: 0.45,\r\n                                        mb: 0.45\r\n                                    }}\r\n                                    primary={<Typography variant=\"h4\">{dashboardData.todays_upload}</Typography>}\r\n                                    secondary={\r\n                                        <Typography\r\n                                            variant=\"subtitle2\"\r\n                                            sx={{\r\n                                                color: theme.palette.grey[500],\r\n                                                mt: 0.5\r\n                                            }}\r\n                                        >\r\n                                            Today's Upload Count\r\n                                        </Typography>\r\n                                    }\r\n                                />\r\n                            </ListItem>\r\n                        </List>\r\n                    </Box>\r\n                </CardWrapper>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nTotalIncomeLightCard.propTypes = {\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default TotalIncomeLightCard;\r\n","// material-ui\r\nimport { Card, CardContent, Grid } from '@mui/material';\r\nimport Skeleton from '@mui/material/Skeleton';\r\n\r\n// project imports\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// ==============================|| SKELETON TOTAL GROWTH BAR CHART ||============================== //\r\n\r\nconst TotalGrowthBarChart = () => (\r\n    <Card>\r\n        <CardContent>\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12}>\r\n                    <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={gridSpacing}>\r\n                        <Grid item xs zeroMinWidth>\r\n                            <Grid container spacing={1}>\r\n                                <Grid item xs={12}>\r\n                                    <Skeleton variant=\"text\" />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Skeleton variant=\"rectangular\" height={20} />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Skeleton variant=\"rectangular\" height={50} width={80} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Skeleton variant=\"rectangular\" height={530} />\r\n                </Grid>\r\n            </Grid>\r\n        </CardContent>\r\n    </Card>\r\n);\r\n\r\nexport default TotalGrowthBarChart;\r\n","// ===========================|| DASHBOARD - TOTAL GROWTH BAR CHART ||=========================== //\r\n\r\nconst chartData = {\r\n    height: 480,\r\n    type: 'bar',\r\n    options: {\r\n        chart: {\r\n            id: 'bar-chart',\r\n            stacked: true,\r\n            toolbar: {\r\n                show: true\r\n            },\r\n            zoom: {\r\n                enabled: true\r\n            }\r\n        },\r\n        responsive: [\r\n            {\r\n                breakpoint: 480,\r\n                options: {\r\n                    legend: {\r\n                        position: 'bottom',\r\n                        offsetX: -10,\r\n                        offsetY: 0\r\n                    }\r\n                }\r\n            }\r\n        ],\r\n        plotOptions: {\r\n            bar: {\r\n                horizontal: false,\r\n                columnWidth: '50%'\r\n            }\r\n        },\r\n        xaxis: {\r\n            type: 'category',\r\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n        },\r\n        legend: {\r\n            show: true,\r\n            fontSize: '14px',\r\n            fontFamily: `'Roboto', sans-serif`,\r\n            position: 'bottom',\r\n            offsetX: 20,\r\n            labels: {\r\n                useSeriesColors: false\r\n            },\r\n            markers: {\r\n                width: 16,\r\n                height: 16,\r\n                radius: 5\r\n            },\r\n            itemMargin: {\r\n                horizontal: 15,\r\n                vertical: 8\r\n            }\r\n        },\r\n        fill: {\r\n            type: 'solid'\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        grid: {\r\n            show: true\r\n        }\r\n    },\r\n    series: [\r\n        {\r\n            name: 'Daily Upload',\r\n            data: [35, 125, 35, 35, 35, 80, 35, 20, 35, 45, 15, 75]\r\n        },\r\n        {\r\n            name: 'Key Word Entry',\r\n            data: [35, 15, 15, 35, 65, 40, 80, 25, 15, 85, 25, 75]\r\n        },\r\n        {\r\n            name: 'Qualified',\r\n            data: [35, 145, 35, 35, 20, 105, 100, 10, 65, 45, 30, 10]\r\n        },\r\n        {\r\n            name: 'Disqualified',\r\n            data: [0, 0, 75, 0, 0, 115, 0, 0, 0, 0, 150, 0]\r\n        }\r\n    ]\r\n};\r\nexport default chartData;\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Grid, MenuItem, TextField, Typography } from '@mui/material';\r\n\r\n// third-party\r\nimport ApexCharts from 'apexcharts';\r\nimport Chart from 'react-apexcharts';\r\n\r\n// project imports\r\nimport SkeletonTotalGrowthBarChart from 'ui-component/cards/Skeleton/TotalGrowthBarChart';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// chart data\r\nimport chartData from './chart-data/total-growth-bar-chart';\r\n\r\nconst status = [\r\n    {\r\n        value: 'today',\r\n        label: 'Today'\r\n    },\r\n    {\r\n        value: 'month',\r\n        label: 'This Month'\r\n    },\r\n    {\r\n        value: 'year',\r\n        label: 'This Year'\r\n    }\r\n];\r\n\r\n// ==============================|| DASHBOARD DEFAULT - TOTAL GROWTH BAR CHART ||============================== //\r\n\r\nconst TotalGrowthBarChart = ({ isLoading }) => {\r\n    const [value, setValue] = useState('today');\r\n    const theme = useTheme();\r\n    const customization = useSelector((state) => state.customization);\r\n\r\n    const { navType } = customization;\r\n    const { primary } = theme.palette.text;\r\n    const darkLight = theme.palette.dark.light;\r\n    const grey200 = theme.palette.grey[200];\r\n    const grey500 = theme.palette.grey[500];\r\n\r\n    const primary200 = theme.palette.primary[200];\r\n    const primaryDark = theme.palette.primary.dark;\r\n    const secondaryMain = theme.palette.secondary.main;\r\n    const secondaryLight = theme.palette.secondary.light;\r\n\r\n    useEffect(() => {\r\n        const newChartData = {\r\n            ...chartData.options,\r\n            colors: [primary200, primaryDark, secondaryMain, secondaryLight],\r\n            xaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [primary, primary, primary, primary, primary, primary, primary, primary, primary, primary, primary, primary]\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [primary]\r\n                    }\r\n                }\r\n            },\r\n            grid: {\r\n                borderColor: grey200\r\n            },\r\n            tooltip: {\r\n                theme: 'light'\r\n            },\r\n            legend: {\r\n                labels: {\r\n                    colors: grey500\r\n                }\r\n            }\r\n        };\r\n\r\n        // do not load chart when loading\r\n        if (!isLoading) {\r\n            ApexCharts.exec(`bar-chart`, 'updateOptions', newChartData);\r\n        }\r\n    }, [navType, primary200, primaryDark, secondaryMain, secondaryLight, primary, darkLight, grey200, isLoading, grey500]);\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <SkeletonTotalGrowthBarChart />\r\n            ) : (\r\n                <MainCard>\r\n                    <Grid container spacing={gridSpacing}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                                <Grid item>\r\n                                    <Grid container direction=\"column\" spacing={1}>\r\n                                        <Grid item>\r\n                                            <Typography variant=\"subtitle2\">Month Wise Stats for Current Year</Typography>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Typography variant=\"h3\">2465060</Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                {/* <Grid item>\r\n                                    <TextField\r\n                                        id=\"standard-select-currency\"\r\n                                        select\r\n                                        value={value}\r\n                                        onChange={(e) => setValue(e.target.value)}\r\n                                    >\r\n                                        {status.map((option) => (\r\n                                            <MenuItem key={option.value} value={option.value}>\r\n                                                {option.label}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </TextField>\r\n                                </Grid> */}\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Chart {...chartData} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </MainCard>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nTotalGrowthBarChart.propTypes = {\r\n    isLoading: PropTypes.bool\r\n};\r\n\r\nexport default TotalGrowthBarChart;\r\n","import { useEffect, useState } from 'react';\r\n\r\n// material-ui\r\nimport { Grid } from '@mui/material';\r\n\r\n// project imports\r\nimport EarningCard from './EarningCard';\r\nimport PopularCard from './PopularCard';\r\nimport TotalOrderLineChartCard from './TotalOrderLineChartCard';\r\nimport TotalIncomeDarkCard from './TotalIncomeDarkCard';\r\nimport TotalIncomeLightCard from './TotalIncomeLightCard';\r\nimport TotalGrowthBarChart from './TotalGrowthBarChart';\r\nimport { gridSpacing } from 'store/constant';\r\nimport { BASE_BACKEND_URL } from '../../../constants';\r\nimport { toast } from 'react-toastify';\r\n// ==============================|| DEFAULT DASHBOARD ||============================== //\r\n\r\nconst Dashboard = () => {\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [dashboardData, setDashboardData] = useState(null);\r\n    useEffect(() => {\r\n        // Fetch data from the API\r\n        fetch(`${BASE_BACKEND_URL}/api/dashboard`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setDashboardData(data);\r\n                setLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                toast.error('Error fetching dashboard data', {\r\n                    position: 'top-right',\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: 'light'\r\n                });\r\n                console.error('Error fetching dashboard data:', error);\r\n                setLoading(false);\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <Grid container spacing={gridSpacing}>\r\n            <Grid item xs={12}>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item lg={4} md={6} sm={6} xs={12}>\r\n                        <EarningCard isLoading={isLoading} dashboardData={dashboardData} />\r\n                    </Grid>\r\n                    <Grid item lg={4} md={6} sm={6} xs={12}>\r\n                        <TotalOrderLineChartCard isLoading={isLoading} dashboardData={dashboardData} />\r\n                    </Grid>\r\n                    <Grid item lg={4} md={12} sm={12} xs={12}>\r\n                        <Grid container spacing={gridSpacing}>\r\n                            <Grid item sm={6} xs={12} md={6} lg={12}>\r\n                                <TotalIncomeDarkCard isLoading={isLoading} dashboardData={dashboardData} />\r\n                            </Grid>\r\n                            <Grid item sm={6} xs={12} md={6} lg={12}>\r\n                                <TotalIncomeLightCard isLoading={isLoading} dashboardData={dashboardData} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs={12} md={8}>\r\n                        <TotalGrowthBarChart isLoading={isLoading} dashboardData={dashboardData} />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4}>\r\n                        <PopularCard isLoading={isLoading} />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"names":["Card","CardContent","Grid","container","direction","item","justifyContent","Skeleton","variant","width","height","sx","my","CardWrapper","styled","MainCard","theme","backgroundColor","palette","secondary","dark","color","overflow","position","content","background","borderRadius","top","right","breakpoints","down","opacity","isLoading","dashboardData","useTheme","anchorEl","setAnchorEl","useState","border","Box","p","Avatar","typography","commonAvatar","largeAvatar","mt","alignItems","Typography","fontSize","fontWeight","mr","mb","total_records","type","options","chart","id","sparkline","enabled","dataLabels","stroke","curve","tooltip","fixed","x","show","y","title","marker","series","data","customization","useSelector","state","navType","orangeDark","useEffect","newSupportChart","chartData","colors","ApexCharts","bgcolor","pb","xs","grey","spacing","gridSpacing","zeroMinWidth","display","pt","alignContent","MoreHorizOutlined","primary","cursor","onClick","event","currentTarget","success","light","ml","KeyboardArrowUpOutlined","Divider","orange","marginLeft","KeyboardArrowDownOutlined","zIndex","timeValue","setTimeValue","total_search_keyword_records","List","py","ListItem","disableGutters","ListItemAvatar","ListItemText","total_daily_summary_records","warning","todays_upload","stacked","toolbar","zoom","responsive","breakpoint","legend","offsetX","offsetY","plotOptions","bar","horizontal","columnWidth","xaxis","categories","fontFamily","labels","useSeriesColors","markers","radius","itemMargin","vertical","fill","grid","name","value","setValue","text","darkLight","grey200","grey500","primary200","primaryDark","secondaryMain","main","secondaryLight","newChartData","style","yaxis","borderColor","setLoading","setDashboardData","fetch","BASE_BACKEND_URL","then","response","json","catch","error","toast","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","console","lg","md","sm"],"sourceRoot":""}