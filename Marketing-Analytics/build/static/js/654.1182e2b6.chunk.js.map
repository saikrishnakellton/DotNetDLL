{"version":3,"file":"static/js/654.1182e2b6.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/Dialog/dialogClasses.js","../node_modules/@mui/material/Dialog/DialogContext.js","../node_modules/@mui/material/Dialog/Dialog.js","../node_modules/@mui/material/DialogTitle/dialogTitleClasses.js","../node_modules/@mui/material/DialogTitle/DialogTitle.js","../node_modules/@mui/material/DialogContent/dialogContentClasses.js","../node_modules/@mui/material/DialogContent/DialogContent.js","../node_modules/@mui/material/DialogActions/dialogActionsClasses.js","../node_modules/@mui/material/DialogActions/DialogActions.js","views/KeywordsDataEntry/KeywordsDataEntry.js","../node_modules/@mui/icons-material/esm/Cancel.js","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/icons-material/esm/Download.js","../node_modules/@mui/icons-material/esm/Edit.js","../node_modules/@mui/icons-material/esm/Save.js"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getDialogUtilityClass(slot) {\n  return generateUtilityClass('MuiDialog', slot);\n}\nconst dialogClasses = generateUtilityClasses('MuiDialog', ['root', 'scrollPaper', 'scrollBody', 'container', 'paper', 'paperScrollPaper', 'paperScrollBody', 'paperWidthFalse', 'paperWidthXs', 'paperWidthSm', 'paperWidthMd', 'paperWidthLg', 'paperWidthXl', 'paperFullWidth', 'paperFullScreen']);\nexport default dialogClasses;","import { createContext } from 'react';\nconst DialogContext = /*#__PURE__*/createContext({});\nif (process.env.NODE_ENV !== 'production') {\n  DialogContext.displayName = 'DialogContext';\n}\nexport default DialogContext;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"aria-describedby\", \"aria-labelledby\", \"BackdropComponent\", \"BackdropProps\", \"children\", \"className\", \"disableEscapeKeyDown\", \"fullScreen\", \"fullWidth\", \"maxWidth\", \"onBackdropClick\", \"onClose\", \"open\", \"PaperComponent\", \"PaperProps\", \"scroll\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { unstable_useId as useId } from '@mui/utils';\nimport capitalize from '../utils/capitalize';\nimport Modal from '../Modal';\nimport Fade from '../Fade';\nimport Paper from '../Paper';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport dialogClasses, { getDialogUtilityClass } from './dialogClasses';\nimport DialogContext from './DialogContext';\nimport Backdrop from '../Backdrop';\nimport useTheme from '../styles/useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DialogBackdrop = styled(Backdrop, {\n  name: 'MuiDialog',\n  slot: 'Backdrop',\n  overrides: (props, styles) => styles.backdrop\n})({\n  // Improve scrollable dialog support.\n  zIndex: -1\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    scroll,\n    maxWidth,\n    fullWidth,\n    fullScreen\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    container: ['container', `scroll${capitalize(scroll)}`],\n    paper: ['paper', `paperScroll${capitalize(scroll)}`, `paperWidth${capitalize(String(maxWidth))}`, fullWidth && 'paperFullWidth', fullScreen && 'paperFullScreen']\n  };\n  return composeClasses(slots, getDialogUtilityClass, classes);\n};\nconst DialogRoot = styled(Modal, {\n  name: 'MuiDialog',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  '@media print': {\n    // Use !important to override the Modal inline-style.\n    position: 'absolute !important'\n  }\n});\nconst DialogContainer = styled('div', {\n  name: 'MuiDialog',\n  slot: 'Container',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.container, styles[`scroll${capitalize(ownerState.scroll)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  height: '100%',\n  '@media print': {\n    height: 'auto'\n  },\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0\n}, ownerState.scroll === 'paper' && {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center'\n}, ownerState.scroll === 'body' && {\n  overflowY: 'auto',\n  overflowX: 'hidden',\n  textAlign: 'center',\n  '&:after': {\n    content: '\"\"',\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    height: '100%',\n    width: '0'\n  }\n}));\nconst DialogPaper = styled(Paper, {\n  name: 'MuiDialog',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.paper, styles[`scrollPaper${capitalize(ownerState.scroll)}`], styles[`paperWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fullWidth && styles.paperFullWidth, ownerState.fullScreen && styles.paperFullScreen];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 32,\n  position: 'relative',\n  overflowY: 'auto',\n  // Fix IE11 issue, to remove at some point.\n  '@media print': {\n    overflowY: 'visible',\n    boxShadow: 'none'\n  }\n}, ownerState.scroll === 'paper' && {\n  display: 'flex',\n  flexDirection: 'column',\n  maxHeight: 'calc(100% - 64px)'\n}, ownerState.scroll === 'body' && {\n  display: 'inline-block',\n  verticalAlign: 'middle',\n  textAlign: 'left' // 'initial' doesn't work on IE11\n}, !ownerState.maxWidth && {\n  maxWidth: 'calc(100% - 64px)'\n}, ownerState.maxWidth === 'xs' && {\n  maxWidth: theme.breakpoints.unit === 'px' ? Math.max(theme.breakpoints.values.xs, 444) : `${theme.breakpoints.values.xs}${theme.breakpoints.unit}`,\n  [`&.${dialogClasses.paperScrollBody}`]: {\n    [theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 32 * 2)]: {\n      maxWidth: 'calc(100% - 64px)'\n    }\n  }\n}, ownerState.maxWidth && ownerState.maxWidth !== 'xs' && {\n  maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`,\n  [`&.${dialogClasses.paperScrollBody}`]: {\n    [theme.breakpoints.down(theme.breakpoints.values[ownerState.maxWidth] + 32 * 2)]: {\n      maxWidth: 'calc(100% - 64px)'\n    }\n  }\n}, ownerState.fullWidth && {\n  width: 'calc(100% - 64px)'\n}, ownerState.fullScreen && {\n  margin: 0,\n  width: '100%',\n  maxWidth: '100%',\n  height: '100%',\n  maxHeight: 'none',\n  borderRadius: 0,\n  [`&.${dialogClasses.paperScrollBody}`]: {\n    margin: 0,\n    maxWidth: '100%'\n  }\n}));\n\n/**\n * Dialogs are overlaid modal paper based components with a backdrop.\n */\nconst Dialog = /*#__PURE__*/React.forwardRef(function Dialog(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialog'\n  });\n  const theme = useTheme();\n  const defaultTransitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n  const {\n      'aria-describedby': ariaDescribedby,\n      'aria-labelledby': ariaLabelledbyProp,\n      BackdropComponent,\n      BackdropProps,\n      children,\n      className,\n      disableEscapeKeyDown = false,\n      fullScreen = false,\n      fullWidth = false,\n      maxWidth = 'sm',\n      onBackdropClick,\n      onClose,\n      open,\n      PaperComponent = Paper,\n      PaperProps = {},\n      scroll = 'paper',\n      TransitionComponent = Fade,\n      transitionDuration = defaultTransitionDuration,\n      TransitionProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    disableEscapeKeyDown,\n    fullScreen,\n    fullWidth,\n    maxWidth,\n    scroll\n  });\n  const classes = useUtilityClasses(ownerState);\n  const backdropClick = React.useRef();\n  const handleMouseDown = event => {\n    // We don't want to close the dialog when clicking the dialog content.\n    // Make sure the event starts and ends on the same DOM element.\n    backdropClick.current = event.target === event.currentTarget;\n  };\n  const handleBackdropClick = event => {\n    // Ignore the events not coming from the \"backdrop\".\n    if (!backdropClick.current) {\n      return;\n    }\n    backdropClick.current = null;\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n    if (onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n  const ariaLabelledby = useId(ariaLabelledbyProp);\n  const dialogContextValue = React.useMemo(() => {\n    return {\n      titleId: ariaLabelledby\n    };\n  }, [ariaLabelledby]);\n  return /*#__PURE__*/_jsx(DialogRoot, _extends({\n    className: clsx(classes.root, className),\n    closeAfterTransition: true,\n    components: {\n      Backdrop: DialogBackdrop\n    },\n    componentsProps: {\n      backdrop: _extends({\n        transitionDuration,\n        as: BackdropComponent\n      }, BackdropProps)\n    },\n    disableEscapeKeyDown: disableEscapeKeyDown,\n    onClose: onClose,\n    open: open,\n    ref: ref,\n    onClick: handleBackdropClick,\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(TransitionComponent, _extends({\n      appear: true,\n      in: open,\n      timeout: transitionDuration,\n      role: \"presentation\"\n    }, TransitionProps, {\n      children: /*#__PURE__*/_jsx(DialogContainer, {\n        className: clsx(classes.container),\n        onMouseDown: handleMouseDown,\n        ownerState: ownerState,\n        children: /*#__PURE__*/_jsx(DialogPaper, _extends({\n          as: PaperComponent,\n          elevation: 24,\n          role: \"dialog\",\n          \"aria-describedby\": ariaDescribedby,\n          \"aria-labelledby\": ariaLabelledby\n        }, PaperProps, {\n          className: clsx(classes.paper, PaperProps.className),\n          ownerState: ownerState,\n          children: /*#__PURE__*/_jsx(DialogContext.Provider, {\n            value: dialogContextValue,\n            children: children\n          })\n        }))\n      })\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Dialog.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The id(s) of the element(s) that describe the dialog.\n   */\n  'aria-describedby': PropTypes.string,\n  /**\n   * The id(s) of the element(s) that label the dialog.\n   */\n  'aria-labelledby': PropTypes.string,\n  /**\n   * A backdrop component. This prop enables custom backdrop rendering.\n   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.\n   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.\n   * @default styled(Backdrop, {\n   *   name: 'MuiModal',\n   *   slot: 'Backdrop',\n   *   overridesResolver: (props, styles) => {\n   *     return styles.backdrop;\n   *   },\n   * })({\n   *   zIndex: -1,\n   * })\n   */\n  BackdropComponent: PropTypes.elementType,\n  /**\n   * @ignore\n   */\n  BackdropProps: PropTypes.object,\n  /**\n   * Dialog children, usually the included sub-components.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n  /**\n   * If `true`, the dialog is full-screen.\n   * @default false\n   */\n  fullScreen: PropTypes.bool,\n  /**\n   * If `true`, the dialog stretches to `maxWidth`.\n   *\n   * Notice that the dialog width grow is limited by the default margin.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * Determine the max-width of the dialog.\n   * The dialog width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'sm'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * Callback fired when the backdrop is clicked.\n   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.\n   */\n  onBackdropClick: PropTypes.func,\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  /**\n   * The component used to render the body of the dialog.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n  /**\n   * Props applied to the [`Paper`](/material-ui/api/paper/) element.\n   * @default {}\n   */\n  PaperProps: PropTypes.object,\n  /**\n   * Determine the container for scrolling the dialog.\n   * @default 'paper'\n   */\n  scroll: PropTypes.oneOf(['body', 'paper']),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Fade\n   */\n  TransitionComponent: PropTypes.elementType,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Dialog;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getDialogTitleUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogTitle', slot);\n}\nconst dialogTitleClasses = generateUtilityClasses('MuiDialogTitle', ['root']);\nexport default dialogTitleClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"id\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Typography from '../Typography';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogTitleUtilityClass } from './dialogTitleClasses';\nimport DialogContext from '../Dialog/DialogContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getDialogTitleUtilityClass, classes);\n};\nconst DialogTitleRoot = styled(Typography, {\n  name: 'MuiDialogTitle',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: '16px 24px',\n  flex: '0 0 auto'\n});\nconst DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogTitle'\n  });\n  const {\n      className,\n      id: idProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const {\n    titleId: id = idProp\n  } = React.useContext(DialogContext);\n  return /*#__PURE__*/_jsx(DialogTitleRoot, _extends({\n    component: \"h2\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    variant: \"h6\",\n    id: id\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogTitle;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getDialogContentUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContent', slot);\n}\nconst dialogContentClasses = generateUtilityClasses('MuiDialogContent', ['root', 'dividers']);\nexport default dialogContentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"dividers\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogContentUtilityClass } from './dialogContentClasses';\nimport dialogTitleClasses from '../DialogTitle/dialogTitleClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    dividers\n  } = ownerState;\n  const slots = {\n    root: ['root', dividers && 'dividers']\n  };\n  return composeClasses(slots, getDialogContentUtilityClass, classes);\n};\nconst DialogContentRoot = styled('div', {\n  name: 'MuiDialogContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.dividers && styles.dividers];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  flex: '1 1 auto',\n  // Add iOS momentum scrolling for iOS < 13.0\n  WebkitOverflowScrolling: 'touch',\n  overflowY: 'auto',\n  padding: '20px 24px'\n}, ownerState.dividers ? {\n  padding: '16px 24px',\n  borderTop: `1px solid ${(theme.vars || theme).palette.divider}`,\n  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`\n} : {\n  [`.${dialogTitleClasses.root} + &`]: {\n    paddingTop: 0\n  }\n}));\nconst DialogContent = /*#__PURE__*/React.forwardRef(function DialogContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContent'\n  });\n  const {\n      className,\n      dividers = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    dividers\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContent.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Display the top and bottom dividers.\n   * @default false\n   */\n  dividers: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogContent;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getDialogActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogActions', slot);\n}\nconst dialogActionsClasses = generateUtilityClasses('MuiDialogActions', ['root', 'spacing']);\nexport default dialogActionsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"disableSpacing\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogActionsUtilityClass } from './dialogActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getDialogActionsUtilityClass, classes);\n};\nconst DialogActionsRoot = styled('div', {\n  name: 'MuiDialogActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8,\n  justifyContent: 'flex-end',\n  flex: '0 0 auto'\n}, !ownerState.disableSpacing && {\n  '& > :not(:first-of-type)': {\n    marginLeft: 8\n  }\n}));\nconst DialogActions = /*#__PURE__*/React.forwardRef(function DialogActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogActions'\n  });\n  const {\n      className,\n      disableSpacing = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogActions.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogActions;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    fetchRecords,\r\n    addRecord,\r\n    deleteRecord,\r\n    updateRecord,\r\n    fetchTotalKeywordEntryRecords,\r\n    updateAnyKeywordState\r\n} from '../../store/actions';\r\nimport {\r\n    Grid,\r\n    Paper,\r\n    Typography,\r\n    TextField,\r\n    Button,\r\n    TableContainer,\r\n    Table,\r\n    TableHead,\r\n    TableBody,\r\n    TableRow,\r\n    TableCell,\r\n    IconButton,\r\n    CircularProgress,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Select,\r\n    MenuItem,\r\n    TablePagination\r\n} from '@mui/material';\r\nimport {\r\n    Delete as DeleteIcon,\r\n    Edit as EditIcon,\r\n    Save as SaveIcon,\r\n    Cancel as CancelIcon,\r\n    Download as DownloadIcon\r\n} from '@mui/icons-material';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { DateRangePicker } from 'react-date-range';\r\nimport 'react-date-range/dist/styles.css'; // main style file\r\nimport 'react-date-range/dist/theme/default.css'; // theme css file\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\n// import io from 'socket.io-client';\r\nimport { InfinitySpin } from 'react-loader-spinner';\r\nimport { BASE_BACKEND_URL } from '../../constants';\r\nimport { toast } from 'react-toastify';\r\nclass KeywordsDataEntry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editingRecordId: null,\r\n            newRecord: {\r\n                level: 'Level 1',\r\n                classification: 'Equipment',\r\n                keyword_category: '',\r\n                search1: '',\r\n                search2: '',\r\n                search3: '',\r\n                search4: '',\r\n                search5: ''\r\n            },\r\n            deleteConfirmationOpen: false,\r\n            recordToDeleteId: '',\r\n            editingRecord: {},\r\n            loadingData: false,\r\n            showCalendar: false,\r\n            loadingState: false,\r\n            progress: '100.00',\r\n            saveCategoryError: '',\r\n            saveClassificationError: '',\r\n            saveNewCategoryError: '',\r\n            saveNewClassificationError: '',\r\n            isAddRecordVisible: false\r\n        };\r\n        this.fetchProgress = this.fetchProgress.bind(this);\r\n        // this.socket = new WebSocket(`${WS_URL}/ws`);\r\n        // this.socket = new WebSocket('wss://optimasawafiqabackend.kellton.net/ws');\r\n    }\r\n\r\n    // componentDidUpdate(prevProps) {\r\n    //     // Check if the totalRecords prop has changed\r\n    //     if (this.props.totalKeywordEntryRecords !== prevProps.totalKeywordEntryRecords) {\r\n    //         // Reset the kdepage and kderowsPerPage state to their initial values\r\n    //         this.props.updateAnyKeywordState({\r\n    //             kdepage: 0,\r\n    //             kderowsPerPage: 10 // Set your desired default value for kderowsPerPage here\r\n    //         });\r\n    //     }\r\n    // }\r\n    handleDateChange = (event) => {\r\n        const { name, value } = event.target;\r\n\r\n        // Update the state for the selected date\r\n\r\n        // this.setState({ [name]: value });\r\n\r\n        // If both start and end dates are selected, perform validation\r\n        if (name === 'startDate' && this.state.endDate !== '') {\r\n            this.props.updateAnyKeywordState({\r\n                kdedateRange: { startDate: value, endDate: this.props.kdedateRange.endDate }\r\n            });\r\n            // const selectedStartDate = new Date(value);\r\n            // const selectedEndDate = new Date(this.state.endDate);\r\n\r\n            // if (selectedStartDate > selectedEndDate) {\r\n            //     // Handle validation error, e.g., show an error message\r\n            //     console.log('Start date cannot be after end date');\r\n            // }\r\n        } else if (name === 'endDate' && this.state.startDate !== '') {\r\n            this.props.updateAnyKeywordState({\r\n                kdedateRange: { startDate: this.props.kdedateRange.startDate, endDate: value }\r\n            });\r\n            // const selectedStartDate = new Date(this.state.startDate);\r\n            // const selectedEndDate = new Date(value);\r\n\r\n            // if (selectedStartDate > selectedEndDate) {\r\n            //     // Handle validation error, e.g., show an error message\r\n            //     console.log('Start date cannot be after end date');\r\n            // }\r\n        }\r\n    };\r\n    handleDownload = async () => {\r\n        this.setState({ loadingState: true });\r\n        const { kdepage, kderowsPerPage, kdesearchQuery, kdesearchOption, kdedateRange } = this.props;\r\n\r\n        try {\r\n            const response = await fetch(\r\n                `${BASE_BACKEND_URL}/api/records?page=${kdepage}&rowsPerPage=${kderowsPerPage}&searchQuery=${kdesearchQuery}&searchOption=${kdesearchOption}&startDate=${kdedateRange.startDate}&endDate=${kdedateRange.endDate}&download=true`,\r\n                {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        Accept: 'text/csv'\r\n                    }\r\n                }\r\n            );\r\n\r\n            const blob = await response.blob();\r\n\r\n            const url = window.URL.createObjectURL(blob);\r\n\r\n            const link = document.createElement('a');\r\n            link.href = url;\r\n            link.setAttribute('download', 'keyword_data_entry.csv');\r\n            document.body.appendChild(link);\r\n            link.click();\r\n\r\n            this.setState({ loadingState: false });\r\n        } catch (error) {\r\n            toast.error('Error downloading file', {\r\n                position: 'top-right',\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: 'light'\r\n            });\r\n            console.error('Error downloading records:', error);\r\n            this.setState({ loadingState: false });\r\n        }\r\n    };\r\n    componentDidMount() {\r\n        this.props.fetchTotalKeywordEntryRecords();\r\n        this.props.fetchRecords();\r\n        this.intervalId = setInterval(this.fetchProgress, 3000);\r\n        // this.socket = io('https://optimasawafiqabackend.kellton.net'); // Replace with your server URL\r\n\r\n        // this.socket.on('progress', (data) => {\r\n        //     this.setState({ progress: data });\r\n        // })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.intervalId);\r\n    }\r\n\r\n    handleChangePage = (event, newPage) => {\r\n        this.props.updateAnyKeywordState({ kdepage: newPage });\r\n        this.props.fetchRecords();\r\n        // this.setState({ kdepage: newPage }, () => {\r\n        //     const { kdepage, kderowsPerPage } = this.state;\r\n        //     this.props.fetchRecords(kdepage, kderowsPerPage);\r\n        // });\r\n    };\r\n\r\n    handleChangeRowsPerPage = (event) => {\r\n        const newRowsPerPage = parseInt(event.target.value, 10);\r\n        this.props.updateAnyKeywordState({ kderowsPerPage: newRowsPerPage, kdepage: 0 });\r\n        this.props.fetchRecords();\r\n        // this.setState({ kderowsPerPage: newRowsPerPage, kdepage: 0 }, () => {\r\n        //     const { kdepage, kderowsPerPage } = this.state;\r\n        //     this.props.fetchRecords(kdepage, kderowsPerPage);\r\n        // });\r\n    };\r\n\r\n    handleInputChange = (event, record) => {\r\n        this.setState({ saveCategoryError: '', saveClassificationError: '', saveNewCategoryError: '', saveNewClassificationError: '' });\r\n        const { name, value } = event.target;\r\n        if (record) {\r\n            this.setState((prevState) => ({\r\n                editingRecord: {\r\n                    ...prevState.editingRecord,\r\n                    [name]: value\r\n                }\r\n            }));\r\n            console.log(this.state);\r\n        } else {\r\n            this.setState((prevState) => ({\r\n                newRecord: {\r\n                    ...prevState.newRecord,\r\n                    [name]: value\r\n                }\r\n            }));\r\n        }\r\n    };\r\n\r\n    handleAddRecord = () => {\r\n        this.setState({ saveCategoryError: '', saveClassificationError: '', saveNewCategoryError: '', saveNewClassificationError: '' });\r\n        const { newRecord } = this.state;\r\n\r\n        if (!newRecord.keyword_category || !newRecord.classification) {\r\n            if (!newRecord.keyword_category) {\r\n                this.setState({ saveNewCategoryError: 'required' });\r\n            }\r\n            if (!newRecord.classification) {\r\n                this.setState({ saveNewClassificationError: 'required' });\r\n            }\r\n            return;\r\n        }\r\n        this.props.addRecord(newRecord);\r\n        this.setState({\r\n            newRecord: {\r\n                level: 'Level 1',\r\n                classification: 'Equipment',\r\n                keyword_category: '',\r\n                search1: '',\r\n                search2: '',\r\n                search3: '',\r\n                search4: '',\r\n                search5: ''\r\n            }\r\n        });\r\n    };\r\n\r\n    handleSearchQueryChange = (event) => {\r\n        this.props.updateAnyKeywordState({ kdesearchQuery: event.target.value });\r\n    };\r\n\r\n    handleSearchOptionChange = (event) => {\r\n        this.props.updateAnyKeywordState({ kdesearchOption: event.target.value });\r\n    };\r\n\r\n    handleSelectDateRangeChange = (ranges) => {\r\n        this.props.updateAnyKeywordState({\r\n            kdedateRange: ranges.selection\r\n        });\r\n    };\r\n    toggleCalendar = () => {\r\n        this.setState((prevState) => ({\r\n            showCalendar: !prevState.showCalendar\r\n        }));\r\n    };\r\n\r\n    handleSearch = () => {\r\n        this.props.updateAnyKeywordState({ kdepage: 0 });\r\n        this.props.fetchTotalKeywordEntryRecords();\r\n        this.props.fetchRecords();\r\n\r\n        //     const { kdepage, kderowsPerPage, kdesearchQuery, kdesearchOption, kdedateRange } = this.state;\r\n        //     this.props.fetchTotalKeywordEntryRecords(kdesearchQuery, kdesearchOption, kdedateRange.startDate, kdedateRange.endDate);\r\n        //     this.props.fetchRecords(kdepage, kderowsPerPage, kdesearchQuery, kdesearchOption, kdedateRange.startDate, kdedateRange.endDate);\r\n    };\r\n    handleDeleteRecord = (recordId) => {\r\n        this.setState({\r\n            deleteConfirmationOpen: true,\r\n            recordToDeleteId: recordId\r\n        });\r\n    };\r\n\r\n    handleConfirmDelete = () => {\r\n        const { recordToDeleteId } = this.state;\r\n        // // Handle pagination navigation based on deletion result\r\n        if (this.props.records.length == 1 && this.props.kdepage != 0) {\r\n            this.props.updateAnyKeywordState({ kdepage: this.props.kdepage - 1 });\r\n        }\r\n\r\n        this.props.deleteRecord(recordToDeleteId);\r\n        this.setState({\r\n            deleteConfirmationOpen: false,\r\n            recordToDeleteId: ''\r\n        });\r\n    };\r\n\r\n    handleCancelDelete = () => {\r\n        this.setState({\r\n            deleteConfirmationOpen: false,\r\n            recordToDeleteId: ''\r\n        });\r\n    };\r\n\r\n    handleEditRecord = (record) => {\r\n        this.setState({\r\n            editingRecordId: record._id,\r\n            editingRecord: record,\r\n            saveCategoryError: '',\r\n            saveClassificationError: '',\r\n            saveNewCategoryError: '',\r\n            saveNewClassificationError: ''\r\n        });\r\n    };\r\n\r\n    handleSaveRecord = (record) => {\r\n        this.setState({ saveCategoryError: '', saveClassificationError: '', saveNewCategoryError: '', saveNewClassificationError: '' });\r\n        const editedRecords = {};\r\n\r\n        Object.keys(this.state.editingRecord).forEach((key) => {\r\n            if (record.hasOwnProperty(key) && record[key] !== this.state.editingRecord[key]) {\r\n                editedRecords[key] = this.state.editingRecord[key];\r\n            }\r\n        });\r\n\r\n        if (\r\n            (editedRecords.hasOwnProperty('keyword_category') && !editedRecords.keyword_category) ||\r\n            (editedRecords.hasOwnProperty('classification') && !editedRecords.classification)\r\n        ) {\r\n            if (editedRecords.hasOwnProperty('keyword_category') && !editedRecords.keyword_category) {\r\n                this.setState({ saveCategoryError: 'required' });\r\n            }\r\n            if (editedRecords.hasOwnProperty('classification') && !editedRecords.classification) {\r\n                this.setState({ saveClassificationError: 'required' });\r\n            }\r\n            return;\r\n        }\r\n\r\n        this.props.updateRecord(record._id, editedRecords);\r\n        this.setState({ editingRecordId: null, editingRecord: {} });\r\n    };\r\n\r\n    handleCancelEdit = () => {\r\n        this.setState({\r\n            editingRecordId: null,\r\n            editingRecord: {},\r\n            saveCategoryError: '',\r\n            saveClassificationError: '',\r\n            saveNewCategoryError: '',\r\n            saveNewClassificationError: ''\r\n        });\r\n    };\r\n\r\n    async fetchProgress() {\r\n        try {\r\n            const response = await fetch(`${BASE_BACKEND_URL}/api/progress`);\r\n            const data = await response.json();\r\n            this.setState({ progress: data.progress });\r\n            if (data.progress === '100.00') {\r\n                clearInterval(this.intervalId);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching progress:', error);\r\n        }\r\n    }\r\n    handleReprocessData = async () => {\r\n        try {\r\n            this.setState({ loadingData: true });\r\n\r\n            // Make the API call here using fetch or axios or any other library\r\n            const response = await fetch(`${BASE_BACKEND_URL}/api/reproces_data`);\r\n            const data = await response.json();\r\n\r\n            // Process the data and update your state with the fetched data\r\n            // For example, if your response contains an array of records:\r\n            this.setState({\r\n                loadingData: false,\r\n                progress: '0'\r\n                // fetchedData: data\r\n            });\r\n            this.intervalId = setInterval(this.fetchProgress, 3000);\r\n        } catch (error) {\r\n            // Handle errors if any\r\n            toast.error('Error in reprocessing the data', {\r\n                position: 'top-right',\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: 'light'\r\n            });\r\n            this.setState({ loadingData: false });\r\n            console.error('Error fetching data:', error);\r\n        }\r\n    };\r\n    toggleAddRecordVisible = () => {\r\n        this.setState((prevState) => ({\r\n            isAddRecordVisible: !prevState.isAddRecordVisible\r\n        }));\r\n    };\r\n    render() {\r\n        const {\r\n            records,\r\n            loading,\r\n            error,\r\n            totalKeywordEntryRecords,\r\n            kdepage,\r\n            kderowsPerPage,\r\n            kdesearchQuery,\r\n            kdesearchOption,\r\n            kdedateRange\r\n        } = this.props;\r\n        const { newRecord, editingRecordId, deleteConfirmationOpen, isAddRecordVisible, showCalendar, loadingState, progress } = this.state;\r\n        // debugger;\r\n\r\n        function formatDate(date) {\r\n            const options = { day: 'numeric', month: 'short', year: '2-digit' };\r\n            return date.toLocaleDateString(undefined, options);\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {loading && (\r\n                    <div className=\"loader-container\">\r\n                        <InfinitySpin width=\"200\" color=\"#5e35b1\" ariaLabel=\"loading\" wrapperStyle wrapperClass />\r\n                    </div>\r\n                )}\r\n                <MainCard className=\"card\">\r\n                    <h1>Keyword Data Entry</h1>\r\n                    {error && <Typography color=\"error\">{error}</Typography>}\r\n                    <div>\r\n                        <Button\r\n                            onClick={this.handleReprocessData}\r\n                            variant=\"contained\"\r\n                            style={{ background: '#5e35b1', padding: '11px', margin: '11px' }}\r\n                        >\r\n                            Re-Process Keyword {progress && progress != '100.00' && <span ml={1}> ({progress}%)</span>}\r\n                            {this.state.loadingData && <>(Updating...)</>}\r\n                        </Button>\r\n                        {/* <FormControl sx={{ m: 1, width: 300 }}>\r\n                            <InputLabel id=\"search-date-query\"></InputLabel>\r\n                            <TextField\r\n                                type=\"text\"\r\n                                id=\"search-date-query\"\r\n                                label=\"Date Range\"\r\n                                // value={`${kdedateRange.startDate.toDateString()} - ${kdedateRange.endDate.toDateString()}`}\r\n                                // placeholder=\"Select date range\"\r\n                                value={`${formatDate(kdedateRange.startDate)} - ${formatDate(kdedateRange.endDate)}`}\r\n                                onFocus={this.toggleCalendar}\r\n                            />\r\n                        </FormControl> */}\r\n                        {/* {showCalendar && (\r\n                            <div className=\"calendar-container\">\r\n                                <DateRangePicker\r\n                                    ranges={[kdedateRange]}\r\n                                    onChange={this.handleSelectDateRangeChange}\r\n                                    showSelectionPreview={true} // Show the selected range in the calendar\r\n                                    direction=\"horizontal\"\r\n                                    color=\"#5e35b1\"\r\n                                    months={1}\r\n                                    // rangeColors=\"#5e35b1\"\r\n                                    scroll={{ enabled: true }}\r\n                                    showMonthArrow={true}\r\n                                />\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    style={{ background: '#5e35b1' }}\r\n                                    onClick={this.toggleCalendar}\r\n                                    // disabled={loading} // Disable the button if loading is true\r\n                                >\r\n                                    x close\r\n                                </Button>\r\n                            </div>\r\n                        )} */}\r\n                        <TextField\r\n                            sx={{ m: 1, width: 300 }}\r\n                            label=\"Start Date\"\r\n                            type=\"date\"\r\n                            name=\"startDate\"\r\n                            value={kdedateRange.startDate}\r\n                            onChange={this.handleDateChange}\r\n                            InputLabelProps={{\r\n                                shrink: true\r\n                            }}\r\n                            inputProps={{\r\n                                // min: this.state.startDate, // Disable past dates and dates before start date\r\n                                max: kdedateRange.endDate // Disable future dates\r\n                            }}\r\n                        />\r\n\r\n                        <TextField\r\n                            sx={{ m: 1, width: 300 }}\r\n                            label=\"End Date\"\r\n                            type=\"date\"\r\n                            name=\"endDate\"\r\n                            value={kdedateRange.endDate}\r\n                            onChange={this.handleDateChange}\r\n                            InputLabelProps={{\r\n                                shrink: true\r\n                            }}\r\n                            inputProps={{\r\n                                min: kdedateRange.startDate // Disable past dates and dates before start date\r\n                                // max: this.state.endDate // Disable future dates\r\n                            }}\r\n                        />\r\n                        <FormControl sx={{ m: 1, width: 300 }}>\r\n                            <InputLabel id=\"search-option\">Select Parameter</InputLabel>\r\n                            <Select\r\n                                label=\"Select Parameter\"\r\n                                id=\"search-option\"\r\n                                value={kdesearchOption}\r\n                                onChange={this.handleSearchOptionChange}\r\n                                style={{ minWidth: '300px' }}\r\n                            >\r\n                                <MenuItem value=\"default\">Select</MenuItem>\r\n                                <MenuItem value=\"level\">Level</MenuItem>\r\n                                <MenuItem value=\"classification\">Classification</MenuItem>\r\n                                <MenuItem value=\"keyword_category\">Keyword Catergory</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControl sx={{ m: 1, width: 300 }}>\r\n                            <InputLabel id=\"search-query\"></InputLabel>\r\n                            <TextField\r\n                                type=\"text\"\r\n                                id=\"search-query\"\r\n                                value={kdesearchQuery}\r\n                                onChange={this.handleSearchQueryChange}\r\n                                label=\"Search\"\r\n                                // placeholder=\"Search\"\r\n                            />\r\n                        </FormControl>\r\n\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            style={{ background: '#5e35b1', padding: '11px', margin: '11px' }}\r\n                            onClick={this.handleSearch}\r\n                            // disabled={loading} // Disable the button if loading is true\r\n                        >\r\n                            Search\r\n                        </Button>\r\n                        {/* <Button\r\n                            variant=\"contained\"\r\n                            style={{ background: '#5e35b1', padding: '11px', margin: '11px' }}\r\n                            onClick={this.handleDownload}\r\n                            disabled={loadingState}\r\n                            // disabled={loading} // Disable the button if loading is true\r\n                        >\r\n                            {loadingState ? 'Downloading...' : 'Download Records'}\r\n                        </Button> */}\r\n                        <IconButton onClick={this.handleDownload} disabled={loadingState}>\r\n                            <DownloadIcon style={{ color: '#5e35b1' }} />\r\n                        </IconButton>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            style={{ background: '#5e35b1', padding: '11px', margin: '11px' }}\r\n                            onClick={this.toggleAddRecordVisible}\r\n                            disabled={isAddRecordVisible}\r\n                            // disabled={loading} // Disable the button if loading is true\r\n                        >\r\n                            Add New\r\n                        </Button>\r\n                    </div>\r\n                    <br />\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <TableContainer component={Paper}>\r\n                                <Table>\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>Action</TableCell>\r\n                                            <TableCell>Created At</TableCell>\r\n                                            <TableCell>Updated At</TableCell>\r\n                                            <TableCell>Level</TableCell>\r\n                                            <TableCell>Classification</TableCell>\r\n                                            <TableCell>Keyword Category</TableCell>\r\n                                            <TableCell>Search 1</TableCell>\r\n                                            <TableCell>Search 2</TableCell>\r\n                                            <TableCell>Search 3</TableCell>\r\n                                            <TableCell>Search 4</TableCell>\r\n                                            <TableCell>Search 5</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {isAddRecordVisible && (\r\n                                            <TableRow>\r\n                                                <TableCell>\r\n                                                    <IconButton color=\"primary\" onClick={this.handleAddRecord}>\r\n                                                        <SaveIcon />\r\n                                                    </IconButton>\r\n                                                    <IconButton onClick={this.toggleAddRecordVisible}>\r\n                                                        <CancelIcon color=\"error\" />\r\n                                                    </IconButton>\r\n                                                </TableCell>\r\n                                                <TableCell></TableCell>\r\n                                                <TableCell></TableCell>\r\n                                                <TableCell>\r\n                                                    {/* <TextField\r\n                                                label=\"Level\"\r\n                                                name=\"level\"\r\n                                                value={newRecord.level}\r\n                                                onChange={this.handleInputChange}\r\n                                                fullWidth\r\n                                            /> */}\r\n                                                    <Select\r\n                                                        name=\"level\"\r\n                                                        value={newRecord.level}\r\n                                                        onChange={(event) => this.handleInputChange(event)}\r\n                                                        fullWidth\r\n                                                    >\r\n                                                        <MenuItem value=\"Level 1\">Level 1</MenuItem>\r\n                                                        <MenuItem value=\"Level 2\">Level 2</MenuItem>\r\n                                                        <MenuItem value=\"Level 3\">Level 3</MenuItem>\r\n                                                        <MenuItem value=\"Level 4\">Level 4</MenuItem>\r\n                                                    </Select>\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                    {/* <TextField\r\n                                                    error={this.state.saveNewClassificationError && true}\r\n                                                    label=\"Classification\"\r\n                                                    name=\"classification\"\r\n                                                    value={newRecord.classification}\r\n                                                    onChange={this.handleInputChange}\r\n                                                    fullWidth\r\n                                                    required\r\n                                                    helperText={this.state.saveNewClassificationError}\r\n                                                /> */}\r\n                                                    <Select\r\n                                                        name=\"Classification\"\r\n                                                        value={newRecord.classification}\r\n                                                        onChange={(event) => this.handleInputChange(event)}\r\n                                                        fullWidth\r\n                                                    >\r\n                                                        <MenuItem value=\"Equipment\">Equipment</MenuItem>\r\n                                                        <MenuItem value=\"Competitor\">Competitor</MenuItem>\r\n                                                        <MenuItem value=\"Activity\">Activity</MenuItem>\r\n                                                    </Select>\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                    <TextField\r\n                                                        error={this.state.saveNewCategoryError && true}\r\n                                                        helperText={this.state.saveNewCategoryError}\r\n                                                        label=\"Keyword Category\"\r\n                                                        name=\"keyword_category\"\r\n                                                        value={newRecord.keyword_category}\r\n                                                        onChange={this.handleInputChange}\r\n                                                        fullWidth\r\n                                                        required\r\n                                                    />\r\n                                                </TableCell>\r\n\r\n                                                <TableCell>\r\n                                                    <TextField\r\n                                                        label=\"Search 1\"\r\n                                                        name=\"search1\"\r\n                                                        value={newRecord.search1}\r\n                                                        onChange={this.handleInputChange}\r\n                                                        fullWidth\r\n                                                    />\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                    <TextField\r\n                                                        label=\"Search 2\"\r\n                                                        name=\"search2\"\r\n                                                        value={newRecord.search2}\r\n                                                        onChange={this.handleInputChange}\r\n                                                        fullWidth\r\n                                                    />\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                    <TextField\r\n                                                        label=\"Search 3\"\r\n                                                        name=\"search3\"\r\n                                                        value={newRecord.search3}\r\n                                                        onChange={this.handleInputChange}\r\n                                                        fullWidth\r\n                                                    />\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                    <TextField\r\n                                                        label=\"Search 4\"\r\n                                                        name=\"search4\"\r\n                                                        value={newRecord.search4}\r\n                                                        onChange={this.handleInputChange}\r\n                                                        fullWidth\r\n                                                    />\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                    <TextField\r\n                                                        label=\"Search 5\"\r\n                                                        name=\"search5\"\r\n                                                        value={newRecord.search5}\r\n                                                        onChange={this.handleInputChange}\r\n                                                        fullWidth\r\n                                                    />\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        )}\r\n                                        {records.map((record) => (\r\n                                            <TableRow key={record._id}>\r\n                                                <TableCell>\r\n                                                    {editingRecordId === record._id ? (\r\n                                                        <div>\r\n                                                            <IconButton onClick={() => this.handleSaveRecord(record)}>\r\n                                                                <SaveIcon color=\"success\" />\r\n                                                            </IconButton>\r\n                                                            <IconButton onClick={this.handleCancelEdit}>\r\n                                                                <CancelIcon color=\"error\" />\r\n                                                            </IconButton>\r\n                                                        </div>\r\n                                                    ) : (\r\n                                                        <div>\r\n                                                            <IconButton onClick={() => this.handleEditRecord(record)}>\r\n                                                                <EditIcon style={{ color: '#5e35b1' }} />\r\n                                                            </IconButton>\r\n                                                            <IconButton onClick={() => this.handleDeleteRecord(record._id)}>\r\n                                                                <DeleteIcon color=\"error\" />\r\n                                                            </IconButton>\r\n                                                        </div>\r\n                                                    )}\r\n                                                </TableCell>\r\n                                                <TableCell>{record.created_at}</TableCell>\r\n                                                <TableCell>{record.updated_at}</TableCell>\r\n                                                <TableCell>\r\n                                                    {editingRecordId === record._id ? (\r\n                                                        <Select\r\n                                                            name=\"level\"\r\n                                                            value={this.state.editingRecord.level}\r\n                                                            onChange={(event) => this.handleInputChange(event, record)}\r\n                                                        >\r\n                                                            <MenuItem value=\"Level 1\">Level 1</MenuItem>\r\n                                                            <MenuItem value=\"Level 2\">Level 2</MenuItem>\r\n                                                            <MenuItem value=\"Level 3\">Level 3</MenuItem>\r\n                                                            <MenuItem value=\"Level 4\">Level 4</MenuItem>\r\n                                                        </Select>\r\n                                                    ) : (\r\n                                                        record.level\r\n                                                    )}\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                    {editingRecordId === record._id ? (\r\n                                                        // <TextField\r\n                                                        //     name=\"classification\"\r\n                                                        //     value={this.state.editingRecord.classification}\r\n                                                        //     onChange={(event) => this.handleInputChange(event, record)}\r\n                                                        //     fullWidth\r\n                                                        //     error={this.state.saveClassificationError && true}\r\n                                                        //     helperText={this.state.saveClassificationError}\r\n                                                        // />\r\n                                                        <Select\r\n                                                            name=\"classification\"\r\n                                                            value={this.state.editingRecord.classification}\r\n                                                            onChange={(event) => this.handleInputChange(event, record)}\r\n                                                        >\r\n                                                            <MenuItem value=\"Equipment\">Equipment</MenuItem>\r\n                                                            <MenuItem value=\"Competitor\">Competitor</MenuItem>\r\n                                                            <MenuItem value=\"Activity\">Activity</MenuItem>\r\n                                                        </Select>\r\n                                                    ) : (\r\n                                                        record.classification\r\n                                                    )}\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                    {editingRecordId === record._id ? (\r\n                                                        <TextField\r\n                                                            error={this.state.saveCategoryError && true}\r\n                                                            helperText={this.state.saveCategoryError}\r\n                                                            name=\"keyword_category\"\r\n                                                            value={this.state.editingRecord.keyword_category}\r\n                                                            onChange={(event) => this.handleInputChange(event, record)}\r\n                                                            fullWidth\r\n                                                        />\r\n                                                    ) : (\r\n                                                        record.keyword_category\r\n                                                    )}\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                    {editingRecordId === record._id ? (\r\n                                                        <TextField\r\n                                                            name=\"search1\"\r\n                                                            value={this.state.editingRecord.search1}\r\n                                                            onChange={(event) => this.handleInputChange(event, record)}\r\n                                                            fullWidth\r\n                                                        />\r\n                                                    ) : (\r\n                                                        record.search1\r\n                                                    )}\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                    {editingRecordId === record._id ? (\r\n                                                        <TextField\r\n                                                            name=\"search2\"\r\n                                                            value={this.state.editingRecord.search2}\r\n                                                            onChange={(event) => this.handleInputChange(event, record)}\r\n                                                            fullWidth\r\n                                                        />\r\n                                                    ) : (\r\n                                                        record.search2\r\n                                                    )}\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                    {editingRecordId === record._id ? (\r\n                                                        <TextField\r\n                                                            name=\"search3\"\r\n                                                            value={this.state.editingRecord.search3}\r\n                                                            onChange={(event) => this.handleInputChange(event, record)}\r\n                                                            fullWidth\r\n                                                        />\r\n                                                    ) : (\r\n                                                        record.search3\r\n                                                    )}\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                    {editingRecordId === record._id ? (\r\n                                                        <TextField\r\n                                                            name=\"search4\"\r\n                                                            value={this.state.editingRecord.search4}\r\n                                                            onChange={(event) => this.handleInputChange(event, record)}\r\n                                                            fullWidth\r\n                                                        />\r\n                                                    ) : (\r\n                                                        record.search4\r\n                                                    )}\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                    {editingRecordId === record._id ? (\r\n                                                        <TextField\r\n                                                            name=\"search5\"\r\n                                                            value={this.state.editingRecord.search5}\r\n                                                            onChange={(event) => this.handleInputChange(event, record)}\r\n                                                            fullWidth\r\n                                                        />\r\n                                                    ) : (\r\n                                                        record.search5\r\n                                                    )}\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                            <TablePagination\r\n                                rowsPerPageOptions={[5, 10, 25, 50, 100, 500]}\r\n                                component=\"div\"\r\n                                // count={fileDetails.length} // Replace this with the total count of records from the API\r\n                                rowsPerPage={kderowsPerPage}\r\n                                page={kdepage}\r\n                                onPageChange={this.handleChangePage}\r\n                                onRowsPerPageChange={this.handleChangeRowsPerPage}\r\n                                count={totalKeywordEntryRecords}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    {/* Delete Confirmation Dialog */}\r\n                    <Dialog\r\n                        open={deleteConfirmationOpen}\r\n                        onClose={this.handleCancelDelete}\r\n                        aria-labelledby=\"alert-dialog-title\"\r\n                        aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                        <DialogTitle id=\"alert-dialog-title\">Confirm Delete</DialogTitle>\r\n                        <DialogContent>\r\n                            <Typography variant=\"body1\">Are you sure you want to delete this record?</Typography>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={this.handleCancelDelete} color=\"primary\">\r\n                                Cancel\r\n                            </Button>\r\n                            <Button onClick={this.handleConfirmDelete} color=\"primary\">\r\n                                Delete\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                </MainCard>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    records: state.keyword.records,\r\n    loading: state.keyword.loading,\r\n    error: state.keyword.error,\r\n    kdepage: state.keyword.kdepage,\r\n    kderowsPerPage: state.keyword.kderowsPerPage,\r\n    kdedateRange: state.keyword.kdedateRange,\r\n    kdesearchQuery: state.keyword.kdesearchQuery,\r\n    kdesearchOption: state.keyword.kdesearchOption,\r\n    totalKeywordEntryRecords: state.keyword.totalKeywordEntryRecords\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    fetchRecords,\r\n    addRecord,\r\n    deleteRecord,\r\n    updateRecord,\r\n    fetchTotalKeywordEntryRecords,\r\n    updateAnyKeywordState\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(KeywordsDataEntry);\r\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5 20h14v-2H5v2zM19 9h-4V3H9v6H5l7 7 7-7z\"\n}), 'Download');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');"],"names":["getDialogUtilityClass","slot","generateUtilityClass","generateUtilityClasses","createContext","_excluded","DialogBackdrop","styled","Backdrop","name","overrides","props","styles","backdrop","zIndex","DialogRoot","Modal","overridesResolver","root","position","DialogContainer","ownerState","container","capitalize","scroll","_extends","height","outline","display","justifyContent","alignItems","overflowY","overflowX","textAlign","content","verticalAlign","width","DialogPaper","Paper","paper","String","maxWidth","fullWidth","paperFullWidth","fullScreen","paperFullScreen","theme","margin","boxShadow","flexDirection","maxHeight","breakpoints","unit","Math","max","values","xs","dialogClasses","down","borderRadius","React","inProps","ref","useThemeProps","useTheme","defaultTransitionDuration","enter","transitions","duration","enteringScreen","exit","leavingScreen","ariaDescribedby","ariaLabelledbyProp","BackdropComponent","BackdropProps","children","className","disableEscapeKeyDown","onBackdropClick","onClose","open","PaperComponent","PaperProps","TransitionComponent","Fade","transitionDuration","TransitionProps","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","backdropClick","ariaLabelledby","useId","dialogContextValue","titleId","_jsx","clsx","closeAfterTransition","components","componentsProps","as","onClick","event","current","appear","in","timeout","role","onMouseDown","target","currentTarget","elevation","DialogContext","value","getDialogTitleUtilityClass","DialogTitleRoot","Typography","padding","flex","id","idProp","component","variant","getDialogContentUtilityClass","DialogContentRoot","dividers","WebkitOverflowScrolling","borderTop","vars","palette","divider","borderBottom","dialogTitleClasses","paddingTop","getDialogActionsUtilityClass","DialogActionsRoot","disableSpacing","spacing","marginLeft","KeywordsDataEntry","Component","constructor","super","handleDateChange","this","state","endDate","updateAnyKeywordState","kdedateRange","startDate","handleDownload","async","setState","loadingState","kdepage","kderowsPerPage","kdesearchQuery","kdesearchOption","response","fetch","BASE_BACKEND_URL","method","headers","Accept","blob","url","window","URL","createObjectURL","link","document","createElement","href","setAttribute","body","appendChild","click","error","toast","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","console","handleChangePage","newPage","fetchRecords","handleChangeRowsPerPage","newRowsPerPage","parseInt","handleInputChange","record","saveCategoryError","saveClassificationError","saveNewCategoryError","saveNewClassificationError","prevState","editingRecord","log","newRecord","handleAddRecord","keyword_category","classification","addRecord","level","search1","search2","search3","search4","search5","handleSearchQueryChange","handleSearchOptionChange","handleSelectDateRangeChange","ranges","selection","toggleCalendar","showCalendar","handleSearch","fetchTotalKeywordEntryRecords","handleDeleteRecord","recordId","deleteConfirmationOpen","recordToDeleteId","handleConfirmDelete","records","length","deleteRecord","handleCancelDelete","handleEditRecord","editingRecordId","_id","handleSaveRecord","editedRecords","Object","keys","forEach","key","hasOwnProperty","updateRecord","handleCancelEdit","handleReprocessData","loadingData","json","intervalId","setInterval","fetchProgress","toggleAddRecordVisible","isAddRecordVisible","bind","componentDidMount","componentWillUnmount","clearInterval","data","render","loading","totalKeywordEntryRecords","color","ariaLabel","wrapperStyle","wrapperClass","MainCard","Button","style","background","ml","TextField","sx","m","label","type","onChange","InputLabelProps","shrink","inputProps","min","FormControl","InputLabel","Select","minWidth","MenuItem","IconButton","disabled","Download","Grid","item","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","Save","Cancel","helperText","required","map","Edit","Delete","created_at","updated_at","TablePagination","rowsPerPageOptions","rowsPerPage","page","onPageChange","onRowsPerPageChange","count","mapDispatchToProps","connect","keyword","createSvgIcon","d"],"sourceRoot":""}